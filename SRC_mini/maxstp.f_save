c
      SUBROUTINE maxstp(x,p,n,stpmax,nat)
      implicit double precision (a-h, o-z )
      include 'param.inc'
C
C
C   SUBR. SUGEO IS A SET-UP SUBR. FOR THE LATTICE GEOMETRY
C
C   Np  No. OF PARTICLLES IN THE UNIT CELL
C
C   IEA(N)   SEQUENCE  OF  INEQUIVALENT  ATOMS  IN  RR(3,N)
C   RR(3,N)   SL PARTICLE COORD.  -  CARTESIAN
C
C
      parameter ( nmax = 1000 )
      parameter ( nsh = 1 )
      parameter ( eps = 1.d-8 )
c
      dimension x(n),p(n)
c
      DIMENSION RR(3,nmax),pp(3,nmax),rmta(nmax)
      DIMENSION IAK(nmax)
      DIMENSION GG(3,3),alat(3),gg0(3,3)
c
      logical ortho
      COMMON /ORTH/   ORTHO
      COMMON /STRUK/  POS(3,NDIF),AA,BB,CC,ALPHA(3),RMT(NATO),V(NATO),
     *                PIA(3),VOL,IATNR(NATO),MULT(NATO),ISPLIT(NATO)
      COMMON /ROTMAT/ ROTLOC(3,3,NATO),ROTIJ(3,3,NDIF),TAUIJ(3,NDIF)
      COMMON /GENER/  BR1(3,3),BR2(3,3)                                 
c------------------------------------------------------------------------
c      time = mclock()/100.d0
c
c      if( .not. ortho )then
c        stpmax=1.d0
c        return
c      endif
c     write(*,*)'  .not. ortho  in maxstp   ==> stop '
c         stop
c      endif
c
      alat(1) = aa
      alat(2) = bb
      alat(3) = cc
c
c.....max. step < 1/2 cell
      dlambda = 1.d39
      do 10 i=1,n
         if( dabs(p(i)) .gt. eps )then
            ia = mod(i-1,3) + 1
            test = 0.5d0 * alat(ia) / dabs( p(i) )
            dlambda = dmin1( test, dlambda )
         endif
 10   CONTINUE
c
      tpi = 8.d0 * datan(1.d0)
      call inv(br2,gg0,det)
      do 20 i1=1,3
         do 20 i2 = 1,3
            gg(i1,i2) = gg0(i2,i1) * tpi 
 20   CONTINUE
c     write(*,500)gg
c500   format('  lattice vectors are: '/ 3(3f20.10/) )
c
c     berechnen der neuen atompositionen
      qparam=0
      index=0
      do 30 ia=1,nat
        index=index+1
        index1=index
        iak(index) = ia 
        rmta(index) = rmt(ia)
        do 40 ir=1,3
          qparam=qparam+1
          if( qparam .gt. n )then
             write(*,*)'  qparam  .gt.  n in maxstp ==>  stop '
             write(*,*)'    qparam, n = ',qparam, n
             stop
          endif
          rr(ir,index)= x(qparam) 
          pp(ir,index)= p(qparam) 
          rr(ir,index) = 
     &    dmod(  rr(ir,index) + alat(ir), alat(ir) )
 40     CONTINUE
        do 50 im=1,mult(ia)-1
          index=index+1
          iak(index) = ia 
          rmta(index) = rmt(ia)
c     rotieren und translatieren (aber umgekehrt)
          do 60 ir =1,3
            xxx=0.0
            pp(ir,index)=0.0
            do 70 ir1=1,3
              xxx=xxx+rotij(ir1,ir,Index)*rr(ir1,INDEX1)
              pp(ir,index)=pp(ir,index)
     &        +rotij(ir1,ir,Index)*pp(ir1,INDEX1)
 70         CONTINUE
            xxx=xxx-tauij(ir,index)
            rr(ir,index)=dmod( xxx + alat(ir), alat(ir) )
 60       CONTINUE
 50     CONTINUE
 30   CONTINUE
c
      np = index
c
c------------------------------------------------------------------------
      if( np .gt. nmax )then
         write(*,*)' np > nmax in sugeo ==> stop '
         write(*,*)' np, nmax = ',np,nmax
         stop
      endif
c
      call pairdis(rr,np,gg,nsh,pp,rmta,dlambda)
      stpmax = dlambda
c
c      time = mclock()/100.d0 - time
c     write(*,*)'  time in maxstp: ',time
      RETURN
c
      END
