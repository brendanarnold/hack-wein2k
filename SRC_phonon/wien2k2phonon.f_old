      program phonon2wien2k
!     ########################################      
!
!     Program generates WIEN struct files + job from phonon-file.
!
!     ########################################
      implicit real*8(a-h,o-z)
      character*79    fname2,prob
      
      character*4     LATTIC, IREL,CFORM, UNIT
      real*8          ROTLOC(3,3)

      character*79    fname
      character*80    TITLE
      character       ch
      character,allocatable::    phNAME(:)
      character*2,allocatable::    ANAME(:)
      integer,allocatable::        IATNR(:),izz(:),inum(:),ityp(:),natdispl(:)
      dimension       cmat(3,3),pmat(3,3),tmat(3,3)
      real*8, allocatable:: pos(:,:),displ(:,:),force(:,:)
      
!     ### program input

      write(*,*) 'Program generates  Phonon-Hellman-Feynman file from WIEN calculations'
      write(*,*)
      write (*,*) 'Filename of phonon file: '
      read (*,17) fname
      write (*,*) fname
   17 format(A79)

      open (20,FILE=fname,STATUS='old',FORM='formatted',ERR=500)
 100  read(20,'(a80)',end=999) title
      if(title(3:7).ne.'ATOMS') goto 100
        read(20,*,err=999) nequ_at
        read(20,*,err=999) nat
        allocate (aname(nequ_at),phname(nequ_at),izz(nequ_at),iatnr(nequ_at))
        allocate (inum(nequ_at))
        read(20,'(a80)',err=999) title
        do i=1,nequ_at
          read(20,*) iatnr(i),izz(i),aname(i)
        enddo
        read(20,'(a80)',err=999) title
        do i=1,nequ_at
          read(20,*) iatnr(i),phname(i),aname(i)
        enddo
        read(20,'(a80)',err=999) title
        read(20,*) (inum(i),i=1,nequ_at)
        read(20,'(a80)',err=999) title
        read(20,*) lattic
        read(20,'(a80)',err=999) title
        do i=1,3
          read(20,*) (cmat(i,j),j=1,3)
        enddo
        read(20,'(a80)',err=999) title
        do i=1,3
          read(20,*) (pmat(i,j),j=1,3)
        enddo
        read(20,'(a80)',err=999) title
        do i=1,3
          read(20,*) (tmat(i,j),j=1,3)
        enddo
!
        pmat=0
        do i=1,3
          do j=1,3
            do k=1,3
            pmat(i,j)=pmat(i,j)+cmat(i,k)*tmat(k,j)
            enddo
          enddo
        enddo
      aa=sqrt(pmat(1,1)**2+pmat(1,2)**2+pmat(1,3)**2)
      bb=sqrt(pmat(2,1)**2+pmat(2,2)**2+pmat(2,3)**2)
      cc=sqrt(pmat(3,1)**2+pmat(3,2)**2+pmat(3,3)**2)
      alpha=(pmat(1,2)*pmat(1,3)+pmat(2,2)*pmat(2,3)+pmat(3,2)*pmat(3,3))/bb/cc
      beta=(pmat(1,1)*pmat(1,3)+pmat(2,1)*pmat(2,3)+pmat(3,1)*pmat(3,3))/aa/cc
      gamma=(pmat(1,2)*pmat(1,1)+pmat(2,2)*pmat(2,1)+pmat(3,2)*pmat(3,1))/bb/aa
      pi=acos(-1.d0)
      alpha=acos(alpha)*180.d0/pi
      beta=acos(beta)*180.d0/pi
      gamma=acos(gamma)*180.d0/pi
      aa=aa/0.529177
      bb=bb/0.529177
      cc=cc/0.529177
!      write(*,*) aa,bb,cc,alpha,beta,gamma
!
        allocate (pos(3,nat),ityp(nat),force(3,nat))
        read(20,'(a80)',err=999) title
        read(20,'(a80)',err=999) title
        do i=1,nat
          read(20,*) (pos(j,i),j=1,3),ityp(i)
        enddo
        read(20,'(a80)',err=999) title
        read(20,*) ndispl
        allocate (displ(3,ndispl),natdispl(ndispl))
        read(20,'(a80)',err=999) title
        do i=1,ndispl
          read(20,*) (displ(j,i),j=1,3),ch,natdispl(i)
        enddo

      fname2=fname
      do i=79,2,-1
      if(fname(i:i).eq.'.') then
       fname2(1:i)=fname(1:i)
       fname2(i+1:i+4)='hff'
       exit
      endif
      enddo
      open (22,FILE=fname2,STATUS='unknown',FORM='formatted',ERR=510)
      fname2='case.finM'
      open (21,FILE=fname2,STATUS='old',FORM='formatted',ERR=510)

      do J=1,3
      write(22,'(3f10.6)')   (pmat(i,j),i=1,3)
      enddo

!
   do idispl=1,ndispl
      write(22,'(7x,3f10.7,3x,3f10.7)') (POS(k,natdispl(idispl)),k=1,3),(displ(k,idispl),k=1,3)
      do i=1,nat
         read(21,*) (force(k,i),k=1,3)
!           do k=1,3
!             force(k,i)=force(k,i)*13.6d0/1000.d0/0.529177d0
!           enddo
          write(22,'(i3,1x,a1,2x,3f10.7,3x,3f10.4)') i,phname(ityp(i)),(POS(k,i),k=1,3),(force(k,i),k=1,3)
      enddo
      
   enddo

      stop


!     ### errors leading to termination of program
  500 prob='Error accessing file: ' // fname
      call faterror(prob)
      stop
  510 prob='Error accessing file: ' // fname2
      call faterror(prob)
      stop
  999 prob='Error reading file: ' // fname
      call faterror(prob)
      stop


 1000 FORMAT(A80)
 1010 FORMAT(A4,24X,I2,1X,A4,/,13X,A4,6X,A4)
 2010 FORMAT(A4,'LATTICE,NONEQUIV. ATOMS',I3,1X,A4,/,'MODE OF CALC=',A4,' unit=',A4)
 1020 FORMAT(6F10.6)
 2020 FORMAT(6F10.6)
 1030 FORMAT(5X,I3,4X,F10.8,3X,F10.8,3X,F10.8,/,15X,I2,17X,I2)
 1031 FORMAT(5X,I3,4X,F10.8,3X,F10.8,3X,F10.8)
 1050 FORMAT(A10,5X,I5,5X,F10.9,5X,F10.5,5X,F10.5)
 1051 FORMAT(20X,3F10.8)
 2060 FORMAT(I4,6X,'NUMBER OF SYMMETRY OPERATIONS')
 2030 FORMAT('ATOM=',I3,': X=',F10.8,' Y=',F10.8,' Z=',F10.8,/,10X,'MULT=',I2,10X,'ISPLIT=',I2)
 2031 FORMAT('ATOM=',I3,': X=',F10.8,' Y=',F10.8,' Z=',F10.8)
 2050 FORMAT(A2,9X,'NPT=',I5,2X,'R0=',F10.8,1X,'RMT=',F10.4,3X,'Z:',F5.1)
 3050 FORMAT(A1,10X,'NPT=',I5,2X,'R0=',F10.8,1X,'RMT=',F10.4,3X,'Z:',F5.1)
 2051 FORMAT('LOCAL ROT MATRIX:',3X,3F10.7,/,20X,3F10.7,/,20X,3F10.7)
 
      end

      subroutine faterror(prob)
        character*80 prob
        write(*,*)
        write(*,*) 'Fatal Error occured:'
        write(*,*) prob
        write(*,*) 'Program terminated.'
        write(*,*)
        return
      end

      
      
!     ###      
!     ### converts integer to a string
      character*4 function intstr(i)
        integer i
        if (i.lt.10) then
          write(intstr,'(I1)') i
        else if (i.lt.100) then
          write(intstr,'(I2)') i
        else if (i.lt.1000) then
          write(intstr,'(i3)') i
        else
          write(intstr,'(i4)') i
        end if
      end
      


