MODULE param
      INTEGER            LMAX2, LOMAX
      INTEGER            NCOM, NGAU
      INTEGER            NRAD
      integer            iblck
      real*8    clight
      parameter (IBLCK=   64)
      PARAMETER (IBLOCK= 128)
!.....Optimize IBLOCK and IBLCK for your hardware (32-255)
      PARAMETER (LMAX2=   3)                                              
      PARAMETER (LOMAX=   3)                                              
      INTEGER        :: NATO =    0
      PARAMETER (NCOM=   49)                                              
! for ncom parameter check format 1003 in l2main.frc
      INTEGER        :: NDIF =    0
      PARAMETER (NGAU= 1500)
      INTEGER        :: NKPT =    0
      INTEGER        :: NMAT =    0
      PARAMETER (NRAD=  881)                                              
      INTEGER        :: NSYM =    0 
      INTEGER        :: NUME =    0
! for x-dos set lxdos to 3
      parameter (lxdos= 3)
      parameter (nloat= 3)
      parameter (nrf=4)
      PARAMETER (CLIGHT=137.0359895D0)
END MODULE param

MODULE struct
  USE param
  LOGICAL                  :: rel
  REAL*8                   :: AA,BB,CC,VOL,pia(3),alpha(3)
  REAL*8,ALLOCATABLE       :: R0(:),DX(:),RMT(:),zz(:),rotloc(:,:,:),v(:)
  REAL*8,ALLOCATABLE       :: tau(:,:)
  REAL*8,POINTER           :: pos(:,:)
  CHARACTER*4              :: lattic,irel,cform
  CHARACTER*80             :: title
  CHARACTER*10,ALLOCATABLE :: aname(:)
  INTEGER                  :: nat,iord,iprint
  INTEGER,ALLOCATABLE      :: mult(:),jrj(:),iatnr(:),isplit(:)
  INTEGER,ALLOCATABLE      :: iz(:,:,:),inum(:)

 CONTAINS
  SUBROUTINE init_struct
    USE reallocate
    IMPLICIT NONE

    INTEGER                :: ios
    REAL*8                 :: test,ninety
!loop indexs
    INTEGER                :: index,i,j,j1,j2,m,jatom

    test=1.D-5
    ninety=90.0D0

    read (20,1000) title
    read (20,1010)  lattic,nat,cform,irel
    nato=nat
    REL=.TRUE.                                     
    IF(IREL.EQ.'NREL') REL=.FALSE.                                    
    ALLOCATE(aname(nato),mult(nato),jrj(nato),r0(nato),dx(nato),rmt(nato))
    allocate(zz(nato),rotloc(3,3,nato),iatnr(nato),isplit(nato),v(nato))
    v=0.0d0
    ALLOCATE (pos(3,48*nat))
    read (20,1020) aa,bb,cc,alpha(1),alpha(2),alpha(3)
    IF(ABS(ALPHA(1)).LT.test) ALPHA(1)=ninety
    IF(ABS(ALPHA(2)).LT.test) ALPHA(2)=ninety
    IF(ABS(ALPHA(3)).LT.test) ALPHA(3)=ninety
    INDEX=0
    DO jatom=1,NAT
       INDEX=INDEX+1
       READ(20,1030,iostat=ios) iatnr(jatom),( pos(j,index),j=1,3 ), &
            mult(jatom),isplit(jatom) 
       IF(ios /= 0) THEN
          WRITE(6,*) iatnr(jatom),( pos(j,index),j=1,3 ), &
               mult(jatom),isplit(jatom) 
          WRITE(6,*) 'ERROR IN STRUCT FILE READ'
          STOP
       ENDIF
       IF (mult(jatom) .EQ. 0) THEN
          WRITE (6,6000) jatom, index, mult(jatom)
          STOP
       ENDIF
       DO m=1,mult(jatom)-1                                     
          index=index+1                                            
          READ(20,1031) iatnr(jatom),( pos(j,index),j=1,3)         
       ENDDO
       READ(20,1050) aname(jatom),jrj(jatom),r0(jatom),rmt(jatom), &
            zz(jatom)
       dx(jatom)=LOG(rmt(jatom)/r0(jatom)) / (jrj(jatom)-1)           
       rmt(jatom)=r0(jatom)*EXP( dx(jatom)*(jrj(jatom)-1) )           
       READ(20,1051) ((rotloc(i,j,jatom),i=1,3),j=1,3)                
    ENDDO
    ndif=index
    CALL doreallocate(pos, 3, ndif)
    READ(20,1151) iord
    nsym=iord
    ALLOCATE(iz(3,3,nsym),tau(3,nsym),inum(nsym))
    DO j=1,iord
       READ(20,1101) ( (iz(j1,j2,j),j1=1,3),tau(j2,j),j2=1,3 ),inum(j)
    ENDDO
  
1000 FORMAT(A80)                                                       
1010 FORMAT(A4,23X,I3,1x,a4,/,13X,A4,18X,A4)                                 
1020 FORMAT(6F10.7,10X,F10.7)                                          
1030 FORMAT(4X,I4,4X,F10.7,3X,F10.7,3X,F10.7,/,15X,I2,17X,I2)          
1031 FORMAT(4X,I4,4X,F10.7,3X,F10.7,3X,F10.7)                          
1050 FORMAT(A10,5X,I5,5X,F10.9,5X,F10.5,5X,F10.5)                      
1051 FORMAT(20X,3F10.8)                                             
1101 FORMAT(3(3I2,F11.8/),I8)
1151 FORMAT(I4)
6000 FORMAT(///,3X,'ERROR IN LAPW0 : MULT(JATOM)=0 ...', &
          /, 20X,'JATOM=',I3,3X,'INDEX=',I3,3X,'MULT=',I3)
  END SUBROUTINE init_struct

END MODULE struct

MODULE rotat
  INTEGER,ALLOCATABLE     :: itr(:,:)

 CONTAINS
  SUBROUTINE init_rotat(nsym,nato)
    ALLOCATE(itr(nsym,nato))
    itr=0
  END SUBROUTINE init_rotat
END MODULE rotat

MODULE case
  LOGICAL,ALLOCATABLE :: lcase(:,:)
  integer             :: NATOM
  INTEGER,ALLOCATABLE :: IATOM(:)

 CONTAINS
   SUBROUTINE init_case(nato,lmax2)
     ALLOCATE(iatom(nato),lcase(nato,0:lmax2))
     lcase=.FALSE.
     iatom=0
     natom=0
   END SUBROUTINE init_case
END MODULE case

MODULE sporb
  REAL*8,ALLOCATABLE :: det(:),phase(:)
  REAL*8             :: rotinv(3,3)

 CONTAINS
  SUBROUTINE init_sporb(nsym)
    ALLOCATE(det(nsym),phase(nsym))
    det=0.0d0; phase=0.0d0; rotinv=0.0d0
  END SUBROUTINE init_sporb
END MODULE sporb

MODULE matpdf
  COMPLEX*16,ALLOCATABLE :: matp(:,:,:),matd(:,:,:),matf(:,:,:)
  
 CONTAINS
  SUBROUTINE init_matpdf(nsym)
    ALLOCATE(matp(3,3,nsym),matd(5,5,nsym),matf(7,7,nsym))
    matp=(0.0d0,0.0d0);matd=(0.0d0,0.0d0);matf=(0.0d0,0.0d0)
  END SUBROUTINE init_matpdf
END MODULE matpdf

MODULE symop
  REAL*8,ALLOCATABLE     :: smat(:,:,:)
  COMPLEX*16,ALLOCATABLE :: spmt(:,:,:)

 CONTAINS
  SUBROUTINE init_symop(nsym)
    ALLOCATE(smat(3,3,nsym))
    ALLOCATE(spmt(2,2,nsym))
    smat=0.0d0
    spmt=(0.d0,0.d0)
  END SUBROUTINE init_symop
END MODULE symop

MODULE xxa
  COMPLEX*16,ALLOCATABLE  :: alm(:,:,:,:,:)
  
 CONTAINS
  SUBROUTINE init_xxa(lmax2,nume,ndif,nrf)
    ALLOCATE(ALM((LMAX2+1)*(LMAX2+1),nume,ndif,nrf,2))
  END SUBROUTINE init_xxa
END MODULE xxa

MODULE xdos
  COMPLEX*16,ALLOCATABLE  :: xqtl(:,:,:,:,:)

 CONTAINS
  SUBROUTINE init_xdos(lxdos,ndif,lmax2)
    ALLOCATE(xqtl(2*lxdos+1,2*lxdos+1,ndif,3,1:lmax2+1))
  END SUBROUTINE init_xdos
END MODULE xdos

MODULE com
  REAL*8,ALLOCATABLE  :: WEIGH(:,:)
  INTEGER,ALLOCATABLE :: nb(:)
  REAL*8              :: EMIN,EF,ELECN,XWT
  INTEGER             :: NSPIN,NBAND,NK,MINWAV,MAXWAV

 CONTAINS
  SUBROUTINE init_com(nume,nkpt)
    ALLOCATE(weigh(nkpt,nume),nb(nkpt))
  END SUBROUTINE init_com
END MODULE com

MODULE xa
  COMPLEX*16,ALLOCATABLE :: phs(:)
  REAL*8,ALLOCATABLE     :: fj(:,:),dfj(:,:),r(:),e(:),weight(:)
  REAL*8                 :: bk(3)

 CONTAINS
  SUBROUTINE init_xa(LMAX2,NMAT,NRAD,NUME)
    ALLOCATE(phs(nume),fj(0:lmax2,nmat),dfj(0:lmax2,nmat))
    ALLOCATE(r(nrad),e(nume),weight(nume))
  END SUBROUTINE init_xa
END MODULE xa

MODULE xa3
!_REAL  REAL*8,ALLOCATABLE  :: a(:,:)
!_COMPLEX  COMPLEX*16,ALLOCATABLE  :: a(:,:)
  REAL*8,ALLOCATABLE    :: BKX(:),BKY(:),BKZ(:)

 CONTAINS
   SUBROUTINE init_xa3(nume,nmat)
     ALLOCATE(a(NMAT,NUME),BKX(NMAT),BKY(NMAT),BKZ(NMAT))
   END SUBROUTINE init_xa3
END MODULE xa3

MODULE ams
  REAL*8          :: atom_mass(103)

 CONTAINS
  SUBROUTINE init_ams
  REAL*8          :: atom_mass(103)
     DATA atom_mass /1.,4.,6.9,9.,10.8,12.,14.,16.,19.,20.2, &
          23.,24.3,27.,28.1,31.,32.,35.4,40.,39.1,40.,45., &
          47.9,50.9,52.,54.9,55.8,58.9,58.7,63.5,65.4,69.7, &
          72.6,74.9,79.,79.9,83.8,85.5,87.6,88.9,91.2,92.9, &
          95.9,98.,101.1,102.9,106.4,107.9,112.4,114.8, &
          118.7,121.8,127.6,126.9,131.3,132.9,137.3,138.9,140.1, &
          140.9,144.2,145.,150.4,152.,157.3,158.9,162.5, &
          164.9,167.3,168.9,173.,175.,178.5,180.9,183.8,186.2, &
          190.2,192.2,195.1,197.,200.6,204.4,207.2,209.,209., &
          210.,222.,223.,226.,227.,232.,231.,238.,237.,244.,243., &
          247.,247.,251.,252.,257.,258.,259.,262./     
   END SUBROUTINE init_ams
 END MODULE ams
