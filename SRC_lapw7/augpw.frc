      SUBROUTINE AUGPW(LATOM,NPW,ALM,BLM,ROTLOC,Y,bk,coef,nmat)
      use struct
      use atspdt
      use bessfu
!     last changes: 29.08.00 ub (updating comments)
!                   08.11.00 ub (MVATOM introduced)
!                   12.11.00 ub (C:17/TR(I)CK17 feature with parameters)
!
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE 'param.inc'
      COMPLEX*16 ALM((LMAX7+1)*(LMAX7+1)),BLM((LMAX7+1)*(LMAX7+1))
!
! The PW part of the augmentation coefficients A_lm,a and B_lm,a 
! of a given eigen state at a given atom a in the unit cell
! -----------------------------------------------------------------------------
! Input:
! LATOM    -- the atom a 
! NPW      -- current number of PW basis functions
! ROTLOC   -- the local rotation matrices T_a of each atom
!             [ stored as (T_a^-1)_ij = ROTLOC(i,j,a) ]
!
! Output:
! ALM, BLM -- the PW part of the augmentation coefficients for each (l,m) 
!
! Working arrays:
! Y        -- to hold Y_lm(...)
! -----------------------------------------------------------------------------
! X_l,m,a = Sum(K) c_K/sqrt(V) exp(i(K+k)R_a) Y(*)_lm(T_a^-1(K+k)) X_l,a(|K+k|)
!
! Here (*) stands for an optional complex conjugation on Y_lm(...)
! WIEN95 : (*) =   
! WIEN97 : (*) = *
! 
! R_a   : center of atom a
! T_a   : local rotation matrix of atom a
! X_l,a : PW augmentation coefficients for atom a
!
! Note: Letting  R_a = Q_a(R_0) + t_a  yields
!
!       exp(i(K+k)R_a) = exp(i(K+k)t_a + i[Q_a^-1(K+k)]R_0)
!
!       which is the expression used in LAPW1 and LAPW2
! -----------------------------------------------------------------------------
!_REAL         REAL*8     COEF(nmat)
!_COMPLEX      COMPLEX*16 COEF(nmat)
!      COMMON /STRUCT/ POS(3,NDIF),ZNUC(NATO),RMT(NATO),MULT(NATO),
!     *                IATNR(NDIF),ANAME(NATO)
!      COMMON /ATSPDT/ P (0:LMAX7,NATO),DP (0:LMAX7,NATO),
!     *                PE(0:LMAX7,NATO),DPE(0:LMAX7,NATO)
!      COMMON /BESSFU/ FJ(0:LMAX7,NMAT,NRMT),DFJ(0:LMAX7,NMAT,NRMT), &
!                      RAD(NRMT),IRAD(NATO)
!      COMMON /EIGVEC/ BK(3,NMAT),COEF(NMAT)
      real*8 BK(3,NMAT)
!
      COMPLEX*16 PHS,PHSLM,Y((LMAX7+1)*(LMAX7+1))
      DIMENSION  RK(3),ROTLOC(3,3,*)
!
      JATOM = IATNR(LATOM)
      IMT   = IRAD (JATOM)
!
!     << initialize ALM and BLM >>
      DO 10 LM=1,(LMAX7+1)*(LMAX7+1)
        ALM(LM) = (0.0D0,0.0D0)
        BLM(LM) = (0.0D0,0.0D0)
   10 CONTINUE
!
      DO 20 IPW=1,NPW
!
!       << Y*(*)_lm(T_a^-1(K+k)) >>
        DO 30 I=1,3
          RK(I) = ROTLOC(I,1,LATOM)*BK(1,IPW) &
                + ROTLOC(I,2,LATOM)*BK(2,IPW) &
                + ROTLOC(I,3,LATOM)*BK(3,IPW)
   30   CONTINUE
        CALL YLM(RK,LMAX7,Y)
!:17[
        IF(.NOT.KCONJG)THEN
!         << WIEN95 convention : (*) =   >>
          DO 35 LM=1,(LMAX7+1)*(LMAX7+1)
            Y(LM) = DCONJG(Y(LM))
   35     CONTINUE
        ENDIF
!:17]
!
!       << c_K/sqrt(V) * exp(i(K+k)R_a) >>
        ARG = BK(1,IPW)*POS(1,LATOM) + BK(2,IPW)*POS(2,LATOM) &
            + BK(3,IPW)*POS(3,LATOM)
        PHS = COEF(IPW) * DCMPLX(COS(ARG),SIN(ARG))
!
!       << A_l,a and B_l,a (without Rmt^2 factor) >>
! -----------------------------------------------------------------
! A_a,l = - [ d/dE d/dr u_l,a(Rmt,E)      j_l(Rmt*|K+k|) -
!             d/dE      u_l,a(Rmt,E) d/dr j_l(Rmt*|K+k|) ] 
!
! B_a,l = - [           u_l,a(Rmt,E) d/dr j_l(Rmt*|K+k|) -
!                  d/dr u_l,a(Rmt,E)      j_l(Rmt*|K+k|) ]
! -----------------------------------------------------------------
        LM = 0
        DO 40 L=0,LMAX7
          AL = DFJ(L,IPW,IMT)* PE(L,JATOM) - &
                FJ(L,IPW,IMT)*DPE(L,JATOM)
          BL =  FJ(L,IPW,IMT)*DP (L,JATOM) -  &
               DFJ(L,IPW,IMT)* P (L,JATOM)
          DO 50 M=-L,L
            LM = LM + 1
            PHSLM = PHS * DCONJG( Y(LM) )
            ALM(LM) = ALM(LM) + PHSLM * AL
            BLM(LM) = BLM(LM) + PHSLM * BL
   50     CONTINUE
   40   CONTINUE
   20 CONTINUE
!
      END
